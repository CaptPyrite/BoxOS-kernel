import customtkinter
from tkinter import Frame as TK_FRAME

def make_draggable(widget,btn="<Button-1>",motion="<B1-Motion>"):
    def __draggable__(widget):
        widget.bind(btn, on_drag_start)
        widget.bind(motion, on_drag_motion)
    
    def on_drag_start(event):
        widget = event.widget.master
        widget._drag_start_x = event.x
        widget._drag_start_y = event.y
    
    def on_drag_motion(event):   
        widget = event.widget.master
        x = widget.winfo_x() - widget._drag_start_x + event.x
        y = widget.winfo_y() - widget._drag_start_y + event.y
        widget.place(x=x, y=y)
        
    __draggable__(widget)

def create_normal_app(master,bg,title):
    main = customtkinter.CTkFrame(master,width=750,
                                     height=500,
                                     corner_radius=25,
                                     fg_color=bg)
    
    top_frame = TK_FRAME(main,bg="#C0C0C0",height=35,width=750)
    top_frame.place(x=0,y=0)
    
    exit_btn = customtkinter.CTkButton(master=top_frame,text="X",
                                       fg_color="#ff0000",height=30,width=10,
                                       corner_radius=12,hover_color="#f00000",command=lambda:[main.destroy()])
    exit_btn.place(x=700,y=2)
    make_draggable(top_frame)
    main.pack()
    
    return main

def create_geometric_app(master,bg,title,X,Y):
    main = customtkinter.CTkFrame(master,width=X,
                                     height=Y,
                                     corner_radius=25,
                                     fg_color=bg)
    
    top_frame = TK_FRAME(main,bg="#C0C0C0",height=35,width=750)
    top_frame.place(x=0,y=0)
    
    exit_btn = customtkinter.CTkButton(master=top_frame,text="X",
                                       fg_color="#ff0000",height=30,width=10,
                                       corner_radius=12,hover_color="#f00000",command=lambda:[main.destroy()])
    exit_btn.place(x=X-50,y=2)
    make_draggable(top_frame)
    main.pack()
    
    return main
